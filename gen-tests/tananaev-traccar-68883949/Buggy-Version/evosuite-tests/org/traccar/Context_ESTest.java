/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 03 04:20:32 GMT 2024
 */

package org.traccar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.traccar.Context;
import org.traccar.ServerManager;
import org.traccar.database.ConnectionManager;
import org.traccar.database.DataManager;
import org.traccar.database.PermissionsManager;
import org.traccar.geocode.ReverseGeocoder;
import org.traccar.http.WebServer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Context_ESTest extends Context_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "*.B2g}KD7";
      try { 
        Context.init(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[6];
      try { 
        Context.init(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Context context0 = new Context();
      assertFalse(context0.isLoggerEnabled());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ServerManager serverManager0 = Context.getServerManager();
      assertNull(serverManager0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DataManager dataManager0 = Context.getDataManager();
      assertNull(dataManager0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WebServer webServer0 = Context.getWebServer();
      assertNull(webServer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PermissionsManager permissionsManager0 = Context.getPermissionsManager();
      assertNull(permissionsManager0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = Context.isLoggerEnabled();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Properties properties0 = Context.getProps();
      assertNull(properties0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConnectionManager connectionManager0 = Context.getConnectionManager();
      assertNull(connectionManager0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Context.init((DataManager) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ReverseGeocoder reverseGeocoder0 = Context.getReverseGeocoder();
      assertNull(reverseGeocoder0);
  }
}
