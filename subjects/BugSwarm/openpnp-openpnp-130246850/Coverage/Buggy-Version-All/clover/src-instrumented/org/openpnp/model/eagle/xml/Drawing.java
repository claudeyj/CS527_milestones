/* $$ This file has been instrumented by Clover 4.5.2#20240131180750 $$ *///
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2014.10.23 at 08:50:01 AM PDT
//


package org.openpnp.model.eagle.xml;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {"settings", "grid", "layers", "libraryOrSchematicOrBoard"})
@XmlRootElement(name = "drawing")
public class Drawing {public static class __CLR4_5_2d2kd2klx1h3ar0{public static com_atlassian_clover.CoverageRecorder R;public static com_atlassian_clover.CloverProfile[] profiles = { };@java.lang.SuppressWarnings("unchecked") public static <I, T extends I> I lambdaInc(final int i,final T l,final int si){java.lang.reflect.InvocationHandler h=new java.lang.reflect.InvocationHandler(){public java.lang.Object invoke(java.lang.Object p,java.lang.reflect.Method m,java.lang.Object[] a) throws Throwable{R.inc(i);R.inc(si);try{return m.invoke(l,a);}catch(java.lang.reflect.InvocationTargetException e){throw e.getCause()!=null?e.getCause():new RuntimeException("Clover failed to invoke instrumented lambda",e);}}};return (I)java.lang.reflect.Proxy.newProxyInstance(l.getClass().getClassLoader(),l.getClass().getInterfaces(),h);}static{com_atlassian_clover.CoverageRecorder _R=null;try{com_atlassian_clover.CloverVersionInfo.An_old_version_of_clover_is_on_your_compilation_classpath___Please_remove___Required_version_is___4_5_2();if(20240131180750L!=com_atlassian_clover.CloverVersionInfo.getBuildStamp()){com_atlassian_clover.Clover.l("[CLOVER] WARNING: The Clover version used in instrumentation shall match the runtime version.");com_atlassian_clover.Clover.l("[CLOVER] WARNING: Instr=4.5.2#20240131180750,Runtime="+com_atlassian_clover.CloverVersionInfo.getReleaseNum()+"#"+com_atlassian_clover.CloverVersionInfo.getBuildStamp());}R=com_atlassian_clover.Clover.getNullRecorder();_R=com_atlassian_clover.Clover.getNullRecorder();_R=com_atlassian_clover.Clover.getRecorder("\u002f\u0055\u0073\u0065\u0072\u0073\u002f\u006a\u0075\u006e\u002f\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0073\u002f\u0054\u0041\u002f\u0043\u0053\u0035\u0032\u0037\u002f\u006d\u0069\u006c\u0065\u0073\u0074\u006f\u006e\u0065\u005f\u0061\u006e\u0073\u0077\u0065\u0072\u002f\u0077\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065\u002f\u006d\u0069\u006c\u0065\u0073\u0074\u006f\u006e\u0065\u0033\u002f\u006f\u0070\u0065\u006e\u0070\u006e\u0070\u002d\u006f\u0070\u0065\u006e\u0070\u006e\u0070\u002d\u0031\u0033\u0030\u0032\u0034\u0036\u0038\u0035\u0030\u002f\u0042\u0075\u0067\u0067\u0079\u002d\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u002f\u0074\u0061\u0072\u0067\u0065\u0074\u002f\u0063\u006c\u006f\u0076\u0065\u0072\u002f\u0063\u006c\u006f\u0076\u0065\u0072\u002e\u0064\u0062",1717570421651L,8589935092L,16958,profiles,new java.lang.String[]{"clover.distributed.coverage",null});}catch(java.lang.SecurityException e){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised because it has insufficient security privileges. Please consult the Clover documentation on the security policy file changes required. ("+e.getClass()+":"+e.getMessage()+")");}catch(java.lang.NoClassDefFoundError e){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised. Are you sure you have Clover in the runtime classpath? ("+e.getClass()+":"+e.getMessage()+")");}catch(java.lang.Throwable t){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised because of an unexpected error. ("+t.getClass()+":"+t.getMessage()+")");}R=_R;}}public static final com_atlassian_clover.TestNameSniffer __CLR4_5_2_TEST_NAME_SNIFFER=com_atlassian_clover.TestNameSniffer.NULL_INSTANCE;

    protected Settings settings;
    protected Grid grid;
    @XmlElement(required = true)
    protected Layers layers;
    @XmlElements({@XmlElement(name = "library", required = true, type = Library.class),
            @XmlElement(name = "schematic", required = true, type = Schematic.class),
            @XmlElement(name = "board", required = true, type = Board.class)})
    protected List<Object> libraryOrSchematicOrBoard;

    /**
     * Gets the value of the settings property.
     * 
     * @return possible object is {@link Settings }
     * 
     */
    public Settings getSettings() {try{__CLR4_5_2d2kd2klx1h3ar0.R.inc(16940);
        __CLR4_5_2d2kd2klx1h3ar0.R.inc(16941);return settings;
    }finally{__CLR4_5_2d2kd2klx1h3ar0.R.flushNeeded();}}

    /**
     * Sets the value of the settings property.
     * 
     * @param value allowed object is {@link Settings }
     * 
     */
    public void setSettings(Settings value) {try{__CLR4_5_2d2kd2klx1h3ar0.R.inc(16942);
        __CLR4_5_2d2kd2klx1h3ar0.R.inc(16943);this.settings = value;
    }finally{__CLR4_5_2d2kd2klx1h3ar0.R.flushNeeded();}}

    /**
     * Gets the value of the grid property.
     * 
     * @return possible object is {@link Grid }
     * 
     */
    public Grid getGrid() {try{__CLR4_5_2d2kd2klx1h3ar0.R.inc(16944);
        __CLR4_5_2d2kd2klx1h3ar0.R.inc(16945);return grid;
    }finally{__CLR4_5_2d2kd2klx1h3ar0.R.flushNeeded();}}

    /**
     * Sets the value of the grid property.
     * 
     * @param value allowed object is {@link Grid }
     * 
     */
    public void setGrid(Grid value) {try{__CLR4_5_2d2kd2klx1h3ar0.R.inc(16946);
        __CLR4_5_2d2kd2klx1h3ar0.R.inc(16947);this.grid = value;
    }finally{__CLR4_5_2d2kd2klx1h3ar0.R.flushNeeded();}}

    /**
     * Gets the value of the layers property.
     * 
     * @return possible object is {@link Layers }
     * 
     */
    public Layers getLayers() {try{__CLR4_5_2d2kd2klx1h3ar0.R.inc(16948);
        __CLR4_5_2d2kd2klx1h3ar0.R.inc(16949);return layers;
    }finally{__CLR4_5_2d2kd2klx1h3ar0.R.flushNeeded();}}

    /**
     * Sets the value of the layers property.
     * 
     * @param value allowed object is {@link Layers }
     * 
     */
    public void setLayers(Layers value) {try{__CLR4_5_2d2kd2klx1h3ar0.R.inc(16950);
        __CLR4_5_2d2kd2klx1h3ar0.R.inc(16951);this.layers = value;
    }finally{__CLR4_5_2d2kd2klx1h3ar0.R.flushNeeded();}}

    /**
     * Gets the value of the libraryOrSchematicOrBoard property.
     * 
     * <p>
     * This accessor method returns a reference to the live list, not a snapshot. Therefore any
     * modification you make to the returned list will be present inside the JAXB object. This is
     * why there is not a <CODE>set</CODE> method for the libraryOrSchematicOrBoard property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * 
     * <pre>
     * getLibraryOrSchematicOrBoard().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list {@link Library } {@link Schematic }
     * {@link Board }
     * 
     * 
     */
    public List<Object> getLibraryOrSchematicOrBoard() {try{__CLR4_5_2d2kd2klx1h3ar0.R.inc(16952);
        __CLR4_5_2d2kd2klx1h3ar0.R.inc(16953);if ((((libraryOrSchematicOrBoard == null)&&(__CLR4_5_2d2kd2klx1h3ar0.R.iget(16954)!=0|true))||(__CLR4_5_2d2kd2klx1h3ar0.R.iget(16955)==0&false))) {{
            __CLR4_5_2d2kd2klx1h3ar0.R.inc(16956);libraryOrSchematicOrBoard = new ArrayList<>();
        }
        }__CLR4_5_2d2kd2klx1h3ar0.R.inc(16957);return this.libraryOrSchematicOrBoard;
    }finally{__CLR4_5_2d2kd2klx1h3ar0.R.flushNeeded();}}

}
